// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model civs {
  id                    Int                  @id @unique(map: "id_UNIQUE") @default(autoincrement())
  name                  String?              @unique(map: "name_UNIQUE") @db.VarChar(45)
  type                  String?              @db.VarChar(255)
  dlc                   String?              @db.VarChar(255)
  has_full_blacksmith   String?              @db.VarChar(5)
  uu_type               String?              @db.VarChar(255)
  has_rendemption       String?              @db.VarChar(5)
  architecture_set      String?              @db.VarChar(255)
  has_cannon_galleon    String?              @db.VarChar(5)
  user_solved_civs      user_solved_civs[]
  user_solved_units     user_solved_units[]
}

model users {
  id                    Int                  @id @unique(map: "id_UNIQUE") @default(autoincrement())
  nickname              String               @default("Anonymous") @db.VarChar(30)
  password              String               @default("12345") @db.VarChar(30)
  token                 String               @db.VarChar(64)
  current_civ           Int
  current_unit          Int
  timestamp             String               @db.VarChar(10)
  country               String?              @db.VarChar(5)
  streak                Int
  user_solved_civs      user_solved_civs[]
  user_solved_units     user_solved_units[]
}

model user_solved_civs {
  user_id               Int
  civ_id                Int
  civs                  civs  @relation(fields: [civ_id], references: [id], onDelete: Cascade, map: "user_solved_civs_civ_id_fkey")
  users                 users @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "user_solved_civs_user_Id_fkey")

  @@id([user_id, civ_id])
  @@index([civ_id], map: "user_solved_civs_civ_id_fkey")
}

model user_solved_units {
  user_id               Int
  civ_id                Int
  civs                  civs  @relation(fields: [civ_id], references: [id], onDelete: Cascade, map: "user_solved_units_civ_id_fkey")
  users                 users @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "user_solved_units_user_id_fkey")

  @@id([user_id, civ_id])
  @@index([civ_id], map: "user_solved_units_civ_id_fkey")
}
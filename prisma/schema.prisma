// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model civs {
  id                 Int                  @id @unique(map: "id_UNIQUE") @default(autoincrement())
  name               String?              @unique(map: "name_UNIQUE") @db.VarChar(45)
  type               String?              @db.VarChar(255)
  dlc                String?              @db.VarChar(255)
  hasFullBlacksmith  String?              @db.VarChar(5)
  UUType             String?              @db.VarChar(255)
  hasRendemption     String?              @db.VarChar(5)
  architectureSet    String?              @db.VarChar(255)
  hasCannonGalleon   String?              @db.VarChar(5)
  usersolvedcivs     usersolvedcivs[]
  usersolvedunits    usersolvedunits[]
}

model users {
  id                  Int                  @id @unique(map: "id_UNIQUE") @default(autoincrement())
  nickname            String               @default("Anonymous") @db.VarChar(30)
  password            String               @default("12345") @db.VarChar(30)
  token               String               @db.VarChar(64)
  currentCiv          Int
  currentUnit         Int
  timestamp           String               @db.VarChar(10)
  country             String?              @db.VarChar(5)
  streak              Int
  usersolvedcivs      usersolvedcivs[]
  usersolvedunits     usersolvedunits[]
}

model usersolvedcivs {
  userId Int
  civId  Int
  civs   civs  @relation(fields: [civId], references: [id], onDelete: Cascade, map: "UserSolvedCivs_civId_fkey")
  users  users @relation(fields: [userId], references: [id], onDelete: Cascade, map: "UserSolvedCivs_userId_fkey")

  @@id([userId, civId])
  @@index([civId], map: "UserSolvedCivs_civId_fkey")
}

model usersolvedunits {
  userId Int
  civId  Int
  civs   civs  @relation(fields: [civId], references: [id], onDelete: Cascade, map: "UserSolvedUnits_civId_fkey")
  users  users @relation(fields: [userId], references: [id], onDelete: Cascade, map: "UserSolvedUnits_userId_fkey")

  @@id([userId, civId])
  @@index([civId], map: "UserSolvedUnits_civId_fkey")
}